{"version":3,"sources":["src/app/register/register.page.html","src/app/register/register-routing.module.ts","src/app/register/register.module.ts","src/app/register/register.page.scss","src/app/register/register.page.ts","src/app/services/firebase.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>register</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content padding>\\n  <ion-item *ngIf=\\\"!bo\\\">\\n    <ion-label position=\\\"floating\\\" >Security code</ion-label>\\n    <ion-input type=\\\"text\\\" #pass></ion-input>\\n    <ion-button (click)=\\\"authenticate(pass)\\\"> Authenticate </ion-button>\\n    <ion-text> <h4> Registered Users : {{ dbUsers.length }} </h4> </ion-text>\\n  </ion-item>\\n  \\n  \\n  <ion-list inset=\\\"true\\\" *ngIf=\\\"!bo\\\">\\n    <ion-item *ngFor=\\\"let i of dbUsers\\\" >\\n    <ion-avatar slot=\\\"start\\\" style=\\\"width: 30%;\\\">\\n      \\n      <p>{{ i.receipt }}<p>\\n    </ion-avatar>\\n    <ion-label style=\\\"font-size: medium;\\\">\\n      name : {{i.name}} <br>\\n      college : {{i.college}} <br>\\n      contact :  {{i.phone}} <br>\\n      <p> marks: {{ i.rollno}}</p>\\n    </ion-label>\\n  </ion-item>\\n  </ion-list>\\n  \\n  <form [formGroup]=\\\"registrationForm\\\" (ngSubmit)=\\\"createCode()\\\" *ngIf=\\\"bo\\\">\\n    <ion-list>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\"> Receipt no.   </ion-label>\\n        <ion-input formControlName=\\\"receipt\\\" inputmode=\\\"text\\\" required></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\"> Name   </ion-label>\\n        <ion-input formControlName=\\\"name\\\" inputmode=\\\"text\\\" required></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\"> college   </ion-label>\\n        <ion-input formControlName=\\\"college\\\" inputmode=\\\"text\\\" required></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\"> phone   </ion-label>\\n        <ion-input formControlName=\\\"phone\\\" inputmode=\\\"text\\\" required></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">  roll no   </ion-label>\\n        <ion-input formControlName=\\\"rollno\\\" inputmode=\\\"text\\\" required></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\"> email   </ion-label>\\n        <ion-input formControlName=\\\"email\\\" inputmode=\\\"text\\\" required></ion-input>\\n      </ion-item>\\n      <ion-button padding  expand=\\\"block\\\" type=submit size=\\\"small\\\">Generate code<ion-icon slot=\\\"end\\\" name=\\\"create\\\"></ion-icon></ion-button>\\n      <ion-button padding  expand=\\\"block\\\" size=\\\"small\\\" (click)=\\\"unauth()\\\">logout</ion-button>\\n    </ion-list>\\n  </form>\\n\\n  {{status}}\\n</ion-content>\\n\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RegisterPageRoutingModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport {User} from '../../../models/user';\nimport {FormBuilder, FormControl} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport { StorageService } from '../services/storage.service';\nimport { FirebaseService } from '../services/firebase.service';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n  bo:boolean\n  dbUsers:User[]=[];\n  user:User[]=[];\n  registrationForm:any;\n  status:string=\"\"\n  data:User={} as User;\n  usersList:User[]=[];\n  bo1:boolean=false;\n  constructor(private fb:FormBuilder,private router:Router,private ss:StorageService,private fs:FirebaseService) {  \n    setInterval(data => {\n    this.ss.getAuth('a').then(x=>{\n      \n      this.bo=x;\n    }).catch((err)=>this.bo=false);\n      }, 1000);\n  }\n  \n  \n  ngOnInit() {\n    this.registrationForm=this.fb.group({\n      eventname:new FormControl(''),\n      marks:new FormControl(0),\n      receipt:new FormControl(''),\n      name:new FormControl(''),\n      college:new FormControl(''),\n      phone:new FormControl(''),\n      rollno:new FormControl(''),\n      email:new FormControl('')\n    });\n    this.ss.getAuth('a').then(x=>{\n      \n      this.bo=x;\n    }).catch((err)=>this.bo=false); \n    this.fs.getUsers('participants').valueChanges().subscribe((da:User[])=>{\n        this.dbUsers=da;\n    });\n    \n    console.log(this.dbUsers);\n  }\n  \n  createCode(){\n    let s1=\"\"\n    this.user.push(this.registrationForm.value);  \n    var temp:User=this.registrationForm.value;\n    \n    s1=this.registrationForm.get('receipt').value.replace(/\\s/g,\"\")+\" \"+this.registrationForm.get('name').value.replace(/\\s/g,\"\")+\" \"+\n    this.registrationForm.get('college').value.replace(/\\s/g,\"\")+\" \"+this.registrationForm.get('phone').value.replace(/\\s/g,\"\")+\" \"+\n    this.registrationForm.get('rollno').value.replace(/\\s/g,\"\")+\" \"+this.registrationForm.get('email').value.replace(/\\s/g,\"\");\n    this.registrationForm.reset();\n   /* var a=this.afd.collection('users',ref=>ref.where('receipt','==',temp.receipt)).valueChanges().subscribe((da:User[])=>{\n        if(da.length>=1){\n          this.status=\"Already registered\"\n        }\n        else{\n          this.status=\"\";\n          this.router.navigate(['tabs/register/',s1]);\n          a.unsubscribe();\n        }\n    })*/\n    var a=this.fs.getUser('participants',temp.receipt).valueChanges().subscribe((da:User)=>{\n      if(da){\n        this.status=\"Already registered\"\n      }\n      else{\n        this.router.navigate(['tabs/register/',s1]);\n        this.status=\"\";\n        a.unsubscribe();\n      }\n    })\n    \n    \n  }\n  authenticate(a){\n    \n    if(a.value==\"abc\"){\n      this.ss.setAuth('a',true);\n    }\n    \n  }\n  unauth(){\n    this.ss.setAuth('a',false);\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { User } from 'models/user';\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseService {\n\n  constructor( private db:AngularFirestore ) { }\n\n\n  getUsers(ittop) {\n    return this.db.collection(`${ittop}`);\n  }\n\n  getUser(ittop,id) {\n    return this.db.doc(`${ittop}/${id}`);\n  }\n\n  updateUser(ittop: string,baka: User) {\n    return this.db.doc(`${ittop}/${baka.receipt}`).set(baka);\n  }\n  \n  addUser(ittop: string,baka: User) {\n    this.getUser(ittop,baka.receipt).valueChanges().subscribe((da:User)=>{\n      if(da){\n\n      }\n      else{\n        return this.db.doc(`${ittop}/${baka.receipt}`).set(baka);\n      }\n    })\n    \n  }\n\n  removeUser(ittop,id) {\n    return this.db.doc(`${ittop}/${id}`).delete();\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"register-register-module-es5.js"}