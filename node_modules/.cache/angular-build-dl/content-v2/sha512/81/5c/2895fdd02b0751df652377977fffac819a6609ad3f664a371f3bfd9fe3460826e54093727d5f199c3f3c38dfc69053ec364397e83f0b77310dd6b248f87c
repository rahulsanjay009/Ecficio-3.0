{"version":3,"sources":["src/app/get-qr/get-qr.page.html","src/app/get-qr/get-qr-routing.module.ts","src/app/get-qr/get-qr.module.ts","src/app/get-qr/get-qr.page.scss","src/app/get-qr/get-qr.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    \\n    <ion-title>getQR</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div *ngIf=\\\"bo\\\">\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Receipt no</ion-label>\\n        <ion-input type=\\\"text\\\" #r></ion-input>\\n        \\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">enter mobile no</ion-label>\\n        <ion-input type=\\\"text\\\" #phne></ion-input>\\n      </ion-item>\\n      <ion-button size=\\\"small\\\" expand=\\\"full\\\" (click)=\\\"getqr(r.value,phne.value)\\\"> get my qr </ion-button>\\n     <h6 align=center> {{msg}}</h6>\\n    </div>\\n      <ion-grid style=\\\"background-color:aquamarine;\\\" *ngIf=\\\"!bo\\\">\\n        <ion-row style=\\\"margin-top:10%\\\">\\n          <ion-col>\\n            <div>\\n    \\n            </div>\\n          </ion-col>\\n          <ion-col >\\n            <div>\\n          <ion-text color=\\\"primary\\\" align=\\\"center\\\">\\n           <h1 style=\\\"color:black;\\\"><b>Ecficio 3.0</b></h1>   \\n           </ion-text>\\n            <div align=\\\"center\\\">\\n          <ngx-qrcode [(qrc-element-type)]=\\\"elementType\\\"  [(qrc-value)]=\\\"qrdata\\\" >\\n          </ngx-qrcode>\\n          </div>\\n          <ion-text color=\\\"primary\\\" align=\\\"center\\\">\\n            <div align=\\\"center\\\" style=\\\"color:black;\\\">{{registeredUser.name}}</div>\\n            <p style=\\\"color:black;\\\">Thanks For Registering!!</p>\\n          </ion-text>\\n          <ion-datetime displayFormat=\\\"MMM DD YYYY, h:mm A\\\" [(ngModel)]=\\\"myDate\\\" style=\\\"color:black;\\\"></ion-datetime>\\n          <p style=\\\"color:black;\\\"><b>Note:</b>Please Show The <b>QRCODE</b> at the Time of Participating in Events</p>\\n            </div>\\n          </ion-col>\\n          <ion-col>\\n            <div >\\n                \\n            </div>\\n          </ion-col>\\n    \\n        </ion-row>\\n       \\n      </ion-grid>\\n      <ion-row *ngIf=\\\"!bo\\\">\\n        <ion-button (click)=\\\"done()\\\" size=\\\"medium\\\" fill=\\\"outline\\\">done</ion-button>\\n    </ion-row>\\n    \\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { GetQRPage } from './get-qr.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GetQRPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class GetQRPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { GetQRPageRoutingModule } from './get-qr-routing.module';\nimport {NgxQRCodeModule} from 'ngx-qrcode2';\nimport { GetQRPage } from './get-qr.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    GetQRPageRoutingModule,\n    NgxQRCodeModule\n  ],\n  declarations: [GetQRPage]\n})\nexport class GetQRPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dldC1xci9nZXQtcXIucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FirebaseService } from '../services/firebase.service';\nimport {User} from 'models/user';\nimport { StorageService } from '../services/storage.service';\n\n@Component({\n  selector: 'app-get-qr',\n  templateUrl: './get-qr.page.html',\n  styleUrls: ['./get-qr.page.scss'],\n})\nexport class GetQRPage implements OnInit {\n  qrdata;\n  bo:boolean;\n  msg=\"\";\n  myDate;\n  registeredUser:User={} as User;\n  constructor(private fs:FirebaseService,private ss:StorageService) { \n    \n  }\n\n  ngOnInit() {\n     \n  }\n  getqr(r,p){\n  this.fs.getUser('participants',r).valueChanges().subscribe((da:User)=>{\n        if(da.phone==p){\n          this.registeredUser=da;\n          this.myDate=da.timestamp;\n          \n          this.qrdata=da.receipt+\" \"+da.name+\" \"+da.college+\" \"+da.phone+\" \"+da.rollno+\" \"+da.email+\" \"+da.timestamp;\n          this.bo=false;\n        }\n        else{\n          this.msg=\"invalid combination\";\n          console.log(this.msg);\n        }\n    })\n    \n  }\n  done(){\n    this.bo=!this.bo;\n\n  }\n}\n"],"sourceRoot":"webpack:///","file":"get-qr-get-qr-module-es5.js"}